"""
Gideon Moore

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""


def main(n):
    """
    Given a limit n, finds the sum of all even valued fibonacci values which do not exceed this limit
    """

    # Seeds an array to store fibonacci values as they are found
    # Dynamic programming y'all
    fib_array = [1]

    # Seeds the starter max value, since our first two values are 1 and 2
    max_val = 2

    # Sets a tracker to add to each time we find a new even element
    even_sum = 0

    # So long as the values we're seeing are below the limit...
    while max_val <= n:
        # ...store them in our array...
        fib_array.append(max_val)
        # ...add them to the total if they are even...
        if not max_val & 1:
            even_sum = even_sum + max_val
        # ...and calculate the next Fibonacci value!
        max_val = fib_array[-2] + fib_array[-1]

    print(even_sum)
    return even_sum


# Online prompt asks for limit of 4,000,000
main(4000000)




